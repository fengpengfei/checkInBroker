<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fooluodi.broker.user.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.fooluodi.broker.user.po.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_passwd" property="userPasswd" jdbcType="VARCHAR" />
    <result column="valid_session" property="validSession" jdbcType="VARCHAR" />
    <result column="mail_address" property="mailAddress" jdbcType="VARCHAR" />
    <result column="mail_notify" property="mailNotify" jdbcType="TINYINT" />
    <result column="check_times" property="checkTimes" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, user_passwd, valid_session, mail_address, mail_notify, check_times, 
    is_valid, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fooluodi.broker.user.po.UserInfo" >
    insert into user_info (id, user_name, user_passwd, 
      valid_session, mail_address, mail_notify, 
      check_times, is_valid, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPasswd,jdbcType=VARCHAR}, 
      #{validSession,jdbcType=VARCHAR}, #{mailAddress,jdbcType=VARCHAR}, #{mailNotify,jdbcType=TINYINT}, 
      #{checkTimes,jdbcType=INTEGER}, #{isValid,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fooluodi.broker.user.po.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPasswd != null" >
        user_passwd,
      </if>
      <if test="validSession != null" >
        valid_session,
      </if>
      <if test="mailAddress != null" >
        mail_address,
      </if>
      <if test="mailNotify != null" >
        mail_notify,
      </if>
      <if test="checkTimes != null" >
        check_times,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="validSession != null" >
        #{validSession,jdbcType=VARCHAR},
      </if>
      <if test="mailAddress != null" >
        #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="mailNotify != null" >
        #{mailNotify,jdbcType=TINYINT},
      </if>
      <if test="checkTimes != null" >
        #{checkTimes,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fooluodi.broker.user.po.UserInfo" >
    update user_info
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="validSession != null" >
        valid_session = #{validSession,jdbcType=VARCHAR},
      </if>
      <if test="mailAddress != null" >
        mail_address = #{mailAddress,jdbcType=VARCHAR},
      </if>
      <if test="mailNotify != null" >
        mail_notify = #{mailNotify,jdbcType=TINYINT},
      </if>
      <if test="checkTimes != null" >
        check_times = #{checkTimes,jdbcType=INTEGER},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fooluodi.broker.user.po.UserInfo" >
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      valid_session = #{validSession,jdbcType=VARCHAR},
      mail_address = #{mailAddress,jdbcType=VARCHAR},
      mail_notify = #{mailNotify,jdbcType=TINYINT},
      check_times = #{checkTimes,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getUserByType" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user_info
    where is_valid = #{userType}
  </select>

  <select id="getAllUsers" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from user_info
  </select>
</mapper>